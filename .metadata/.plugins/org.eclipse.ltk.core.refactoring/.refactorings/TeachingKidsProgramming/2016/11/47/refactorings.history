<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract method &apos;private static void drawBranch()&apos; from &apos;org.teachingkidsprogramming.section05recursion.TurtleTree.main()&apos; to &apos;org.teachingkidsprogramming.section05recursion.TurtleTree&apos;&#x0D;&#x0A;- Original project: &apos;TeachingKidsProgramming&apos;&#x0D;&#x0A;- Method name: &apos;drawBranch&apos;&#x0D;&#x0A;- Destination type: &apos;org.teachingkidsprogramming.section05recursion.TurtleTree&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;drawBranch&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.teachingkidsprogramming.section05recursion{TurtleTree.java" name="drawBranch" replace="false" selection="428 1807" stamp="1479148094219" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void drawLowerBranches()&apos; from &apos;org.teachingkidsprogramming.section05recursion.TurtleTree.drawBranch()&apos; to &apos;org.teachingkidsprogramming.section05recursion.TurtleTree&apos;&#x0D;&#x0A;- Original project: &apos;TeachingKidsProgramming&apos;&#x0D;&#x0A;- Method name: &apos;drawLowerBranches&apos;&#x0D;&#x0A;- Destination type: &apos;org.teachingkidsprogramming.section05recursion.TurtleTree&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;drawLowerBranches&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.teachingkidsprogramming.section05recursion{TurtleTree.java" name="drawLowerBranches" replace="false" selection="1354 694" stamp="1479148638469" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void drawShorterBranch()&apos; from &apos;org.teachingkidsprogramming.section05recursion.TurtleTree.drawLowerBranches()&apos; to &apos;org.teachingkidsprogramming.section05recursion.TurtleTree&apos;&#x0D;&#x0A;- Original project: &apos;TeachingKidsProgramming&apos;&#x0D;&#x0A;- Method name: &apos;drawShorterBranch&apos;&#x0D;&#x0A;- Destination type: &apos;org.teachingkidsprogramming.section05recursion.TurtleTree&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;drawShorterBranch&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.teachingkidsprogramming.section05recursion{TurtleTree.java" name="drawShorterBranch" replace="false" selection="1483 184" stamp="1479148753097" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract local variable &apos;branchLength&apos; from expression &apos;42&apos;&#x0D;&#x0A;- Original project: &apos;TeachingKidsProgramming&apos;&#x0D;&#x0A;- Variable name: &apos;branchLength&apos;&#x0D;&#x0A;- Destination method: &apos;org.teachingkidsprogramming.section05recursion.TurtleTree.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;42&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;branchLength&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;org.teachingkidsprogramming.section05recursion{TurtleTree.java" name="branchLength" replace="true" selection="1471 2" stamp="1479149330438" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static void drawBranch(int branchLength)&apos; from &apos;org.teachingkidsprogramming.section05recursion.TurtleTree.main()&apos; to &apos;org.teachingkidsprogramming.section05recursion.TurtleTree&apos;&#x0D;&#x0A;- Original project: &apos;TeachingKidsProgramming&apos;&#x0D;&#x0A;- Method name: &apos;drawBranch&apos;&#x0D;&#x0A;- Destination type: &apos;org.teachingkidsprogramming.section05recursion.TurtleTree&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;drawBranch&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.teachingkidsprogramming.section05recursion{TurtleTree.java" name="drawBranch" replace="false" selection="454 1818" stamp="1479149382588" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void drawLowerBranches(int branchLength)&apos; from &apos;org.teachingkidsprogramming.section05recursion.TurtleTree.drawBranch()&apos; to &apos;org.teachingkidsprogramming.section05recursion.TurtleTree&apos;&#x0D;&#x0A;- Original project: &apos;TeachingKidsProgramming&apos;&#x0D;&#x0A;- Method name: &apos;drawLowerBranches&apos;&#x0D;&#x0A;- Destination type: &apos;org.teachingkidsprogramming.section05recursion.TurtleTree&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;drawLowerBranches&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.teachingkidsprogramming.section05recursion{TurtleTree.java" name="drawLowerBranches" replace="false" selection="1386 687" stamp="1479149584075" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void drawShorterBranch(int branchLength)&apos; from &apos;org.teachingkidsprogramming.section05recursion.TurtleTree.drawLowerBranches()&apos; to &apos;org.teachingkidsprogramming.section05recursion.TurtleTree&apos;&#x0D;&#x0A;- Original project: &apos;TeachingKidsProgramming&apos;&#x0D;&#x0A;- Method name: &apos;drawShorterBranch&apos;&#x0D;&#x0A;- Destination type: &apos;org.teachingkidsprogramming.section05recursion.TurtleTree&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;drawShorterBranch&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.teachingkidsprogramming.section05recursion{TurtleTree.java" name="drawShorterBranch" replace="false" selection="1512 173" stamp="1479149630445" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void adjustColor()&apos; from &apos;org.teachingkidsprogramming.section05recursion.TurtleTree.drawBranch()&apos; to &apos;org.teachingkidsprogramming.section05recursion.TurtleTree&apos;&#x0D;&#x0A;- Original project: &apos;TeachingKidsProgramming&apos;&#x0D;&#x0A;- Method name: &apos;adjustColor&apos;&#x0D;&#x0A;- Destination type: &apos;org.teachingkidsprogramming.section05recursion.TurtleTree&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;adjustColor&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.teachingkidsprogramming.section05recursion{TurtleTree.java" name="adjustColor" replace="false" selection="611 833" stamp="1479312586366" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract local variable &apos;lineLength&apos; from expression &apos;10.5&apos;&#x0D;&#x0A;- Original project: &apos;TeachingKidsProgramming&apos;&#x0D;&#x0A;- Variable name: &apos;lineLength&apos;&#x0D;&#x0A;- Destination method: &apos;org.teachingkidsprogramming.section05recursion.SpiderWeb.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;10.5&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;lineLength&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;org.teachingkidsprogramming.section05recursion{SpiderWeb.java" name="lineLength" replace="true" selection="1168 4" stamp="1479313182092" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;currentZoom&apos; from expression &apos;1.1&apos;&#x0D;&#x0A;- Original project: &apos;TeachingKidsProgramming&apos;&#x0D;&#x0A;- Variable name: &apos;currentZoom&apos;&#x0D;&#x0A;- Destination method: &apos;org.teachingkidsprogramming.section05recursion.SpiderWeb.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;1.1&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;currentZoom&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;org.teachingkidsprogramming.section05recursion{SpiderWeb.java" name="currentZoom" replace="true" selection="994 3" stamp="1479502565822" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static void weaveOneLayer(double lineLength, double currentZoom)&apos; from &apos;org.teachingkidsprogramming.section05recursion.SpiderWeb.main()&apos; to &apos;org.teachingkidsprogramming.section05recursion.SpiderWeb&apos;&#x0D;&#x0A;- Original project: &apos;TeachingKidsProgramming&apos;&#x0D;&#x0A;- Method name: &apos;weaveOneLayer&apos;&#x0D;&#x0A;- Destination type: &apos;org.teachingkidsprogramming.section05recursion.SpiderWeb&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;weaveOneLayer&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.teachingkidsprogramming.section05recursion{SpiderWeb.java" name="weaveOneLayer" replace="false" selection="705 272" stamp="1479502603410" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void moveToTheSquareStart(double length)&apos; from &apos;org.teachingkidsprogramming.section05recursion.RecursiveSquare.main()&apos; to &apos;org.teachingkidsprogramming.section05recursion.RecursiveSquare&apos;&#x0D;&#x0A;- Original project: &apos;TeachingKidsProgramming&apos;&#x0D;&#x0A;- Method name: &apos;moveToTheSquareStart&apos;&#x0D;&#x0A;- Destination type: &apos;org.teachingkidsprogramming.section05recursion.RecursiveSquare&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;moveToTheSquareStart&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.teachingkidsprogramming.section05recursion{RecursiveSquare.java" name="moveToTheSquareStart" replace="false" selection="746 274" stamp="1479504049317" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void moveBackToCenter(double length)&apos; from &apos;org.teachingkidsprogramming.section05recursion.RecursiveSquare.main()&apos; to &apos;org.teachingkidsprogramming.section05recursion.RecursiveSquare&apos;&#x0D;&#x0A;- Original project: &apos;TeachingKidsProgramming&apos;&#x0D;&#x0A;- Method name: &apos;moveBackToCenter&apos;&#x0D;&#x0A;- Destination type: &apos;org.teachingkidsprogramming.section05recursion.RecursiveSquare&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;moveBackToCenter&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.teachingkidsprogramming.section05recursion{RecursiveSquare.java" name="moveBackToCenter" replace="false" selection="1191 279" stamp="1479504087580" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void makeASquare(double length)&apos; from &apos;org.teachingkidsprogramming.section05recursion.RecursiveSquare.main()&apos; to &apos;org.teachingkidsprogramming.section05recursion.RecursiveSquare&apos;&#x0D;&#x0A;- Original project: &apos;TeachingKidsProgramming&apos;&#x0D;&#x0A;- Method name: &apos;makeASquare&apos;&#x0D;&#x0A;- Destination type: &apos;org.teachingkidsprogramming.section05recursion.RecursiveSquare&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;makeASquare&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.teachingkidsprogramming.section05recursion{RecursiveSquare.java" name="makeASquare" replace="false" selection="543 487" stamp="1479504745598" version="1.0" visibility="2"/>
</session>